import streamlit as st
import pandas as pd
from datetime import datetime, timedelta
import plotly.graph_objects as go
import plotly.express as px

st.set_page_config(
    page_title="–û–±—â–∏–π –∞–Ω–∞–ª–∏–∑",
    page_icon="üè§",
    layout="wide",
    initial_sidebar_state="expanded",
)

st.sidebar.image("https://teatrium.ru/upload/medialibrary/af0/2t0u03cf8i13p4o0oven20z5gasagnjl/vtb.jpg",
         use_container_width=True)
st.title('–í–Ω—É—Ç—Ä–∏–≥—Ä—É–ø–ø–æ–≤–æ–π –∫–æ–Ω–∫—É—Ä—Å –ø–æ –ø—Ä–æ–¥–∞–∂–∞–º')

# st.write("Hello world")

# tab = pd.read_excel('C:/Users/ivano/Desktop/–ö–æ–Ω–∫—É—Ä—Å_–≥—Ä—É–ø–ø/–ì—Ä—É–ø–ø–∞.xlsx')
# tab.set_index('–§–ò–û', inplace=True)
# st.dataframe(tab)

df_auth = pd.read_csv('https://docs.google.com/spreadsheets/d/e/2PACX-1vRk8UfW-agKMGralUkIeF4zIRUI1JP1Mx7j0ReFrO6IDfrKFL_FrlMZXYMpTFWex5RkwZl_7hSdfVwD/pub?output=csv')

text_input_container_0 = st.sidebar.empty()
text_input_container_1 = st.sidebar.empty()
text_input_container_2 = st.sidebar.empty()
text_input_container_3 = st.sidebar.empty()
text_input_container_4 = st.sidebar.empty()


# st.sidebar.success("Select a page above.")

if "login" not in st.session_state:
    st.session_state["login"] = ""

if "password" not in st.session_state:
    st.session_state["password"] = ""

if "user" not in st.session_state:
    st.session_state["user"] = ""

if "sign in" not in st.session_state:
    st.session_state["sign in"] = False

button_sign_in = None
button_logout = None

if st.session_state["sign in"] == False:
    text_input_container_0.title("–ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è")
    login = text_input_container_1.text_input("–õ–æ–≥–∏–Ω", st.session_state["login"], placeholder="login")
    st.session_state["login"] = login
    password = text_input_container_2.text_input("–ü–∞—Ä–æ–ª—å", st.session_state["password"], placeholder="password", type='password')
    st.session_state["password"] = password

    button_sign_in = text_input_container_3.button("–í–æ–π—Ç–∏")
else:
    st.sidebar.info(f'–í—Ö–æ–¥ –≤—ã–ø–æ–ª–Ω–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º - {st.session_state["user"]}')
    #st.write(f'{datetime.now}')
    #st.dataframe(df_auth)

    button_logout = text_input_container_4.button("–í—ã–π—Ç–∏")
    if button_logout:
        st.session_state["sign in"] = False

    names_groops = ['/','–ì—Ä—É–ø–ø–∞ 1', '–ì—Ä—É–ø–ø–∞ 2']

    # –ü–µ—Ä–≤–∞—è –≥—Ä—É–ø–ø–∞
    # –£–∫–∞–∂–∏—Ç–µ URL —Ç–∞–±–ª–∏—Ü—ã (–¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω –¥–ª—è –≤—Å–µ—Ö)
    url1 = 'https://docs.google.com/spreadsheets/d/1MpYAg1WwQMHliB5bCZ8FNabZz25eEWBUsQKYRTYLZ0A/export?format=csv&gid=1672766275'
    # –ü—Ä–æ—á–∏—Ç–∞–π—Ç–µ –¥–∞–Ω–Ω—ã–µ –≤ DataFrame
    df1 = pd.read_csv(url1)
    df1.set_index("–§–ò–û", inplace=True)
    df_1 = df1.copy()
    # –£–¥–∞–ª–∏—Ç—å –≤—Å–µ —Å—Ç—Ä–æ–∫–∏, –∫—Ä–æ–º–µ —Å—Ç—Ä–æ–∫–∏ —Å –∏–Ω–¥–µ–∫—Å–æ–º 1
    df_1 = df_1.query('index == "–ò—Ç–æ–≥"') 
    # –ü–µ—Ä–µ–∏–º–µ–Ω—É–π—Ç–µ –∏–Ω–¥–µ–∫—Å
    new_index = pd.Index([names_groops[1]])  # –ù–æ–≤—ã–π –∏–Ω–¥–µ–∫—Å
    df_1 = df_1.set_axis(new_index, axis='index')

    # –£–∫–∞–∂–∏—Ç–µ URL —Ç–∞–±–ª–∏—Ü—ã (–¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω –¥–ª—è –≤—Å–µ—Ö)
    url2 = 'https://docs.google.com/spreadsheets/d/1BQOy0f7JDxAwjd-mvKCx-l42ZoASl0IkxCGJwNyfoiI/export?format=csv&gid=1672766275'
    df2 = pd.read_csv(url2)
    df2.set_index("–§–ò–û", inplace=True)
    df_2 = df2.copy()
    # –£–¥–∞–ª–∏—Ç—å –≤—Å–µ —Å—Ç—Ä–æ–∫–∏, –∫—Ä–æ–º–µ —Å—Ç—Ä–æ–∫–∏ —Å –∏–Ω–¥–µ–∫—Å–æ–º 1
    df_2 = df_2.query('index == "–ò—Ç–æ–≥"') 
    # –ü–µ—Ä–µ–∏–º–µ–Ω—É–π—Ç–µ –∏–Ω–¥–µ–∫—Å
    new_index = pd.Index([names_groops[2]])  # –ù–æ–≤—ã–π –∏–Ω–¥–µ–∫—Å
    df_2 = df_2.set_axis(new_index, axis='index')

    ##–û–±—ä–µ–¥–∏–Ω–µ–Ω–∏–µ —Ç–∞–±–ª–∏—Ü
    df_0 = pd.concat([df_1, df_2])

    df_0['–ë–∞–ª–ª—ã'] = df_0['–ë–∞–ª–ª—ã'].str.replace(',', '.', regex=False)
    df_0['–ë–∞–ª–ª—ã'] = pd.to_numeric(df_0['–ë–∞–ª–ª—ã'], errors='coerce')
    labels=df_0.index

    values = df_0['–ë–∞–ª–ª—ã']

    fig = px.pie(
        names=df_0.index.to_list(), 
        values=df_0['–ë–∞–ª–ª—ã'].to_list(), 
        title="–ë–∞–ª–ª—ã")


    st.plotly_chart(fig)


    df_10 = df1.copy()
    df_10 = df_10.query('index != "–ò—Ç–æ–≥"')
    df_10['–ë–∞–ª–ª—ã'] = df_10['–ë–∞–ª–ª—ã'].str.replace(',', '.', regex=False) 
    df_10 = (df_10
                .sort_values('–ë–∞–ª–ª—ã',
                                ascending=False)
                .head(1)
            )
    df_10.index = df_10.index + ' (1–≥—Ä.)'

    df_20 = df2.copy()
    df_20 = df_20.query('index != "–ò—Ç–æ–≥"')
    df_20['–ë–∞–ª–ª—ã'] = df_20['–ë–∞–ª–ª—ã'].str.replace(',', '.', regex=False) 
    df_20 = (df_20
                .sort_values('–ë–∞–ª–ª—ã', 
                            ascending=False)
                .head(1)
            )
    df_20.index = df_20.index + ' (2–≥—Ä.)'
    # st.dataframe(df_20[[sel_param]].head(1))

    df_00 = pd.concat([df_10, df_20])

    # –°–æ–∑–¥–∞–Ω–∏–µ —Å—Ç–æ–ª–±—á–∞—Ç–æ–π –¥–∏–∞–≥—Ä–∞–º–º—ã
    fig = go.Figure()

    fig.add_trace(go.Bar(
        x=df_00.index.to_list(),
        y=df_00['–ë–∞–ª–ª—ã'],
        marker_color='skyblue'  # –¶–≤–µ—Ç —Å—Ç–æ–ª–±—Ü–æ–≤
    ))

    # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –º–∞–∫–µ—Ç–∞
    fig.update_layout(
        title='–¢–æ–ø—ã',
        xaxis_title='–õ–∏–¥–µ—Ä—ã',
        yaxis_title='–ë–∞–ª–ª—ã'
    )
    st.plotly_chart(fig, use_container_width=True)

    # –ø–æ–∫–∞–∑–∞—Ç–µ–ª–∏
    url1t = 'https://docs.google.com/spreadsheets/d/1MpYAg1WwQMHliB5bCZ8FNabZz25eEWBUsQKYRTYLZ0A/export?format=csv&gid=628014439'
    df1t=pd.read_csv(url1t)
    df1t.set_index("–î–∞—Ç–∞", inplace=True)
    df1t_b = df1t[['–ë–∞–ª–ª—ã']]
    df1t_b['–ë–∞–ª–ª—ã'] = df1t_b['–ë–∞–ª–ª—ã'].str.replace(',', '.', regex=False)
    df1t_b = (df1t_b
        .rename(
            columns={'–ë–∞–ª–ª—ã': '–ì—Ä—É–ø–ø–∞ 1'}))

    url2t = 'https://docs.google.com/spreadsheets/d/1BQOy0f7JDxAwjd-mvKCx-l42ZoASl0IkxCGJwNyfoiI/export?format=csv&gid=628014439'
    df2t=pd.read_csv(url2t)
    df2t.set_index("–î–∞—Ç–∞", inplace=True)
    df2t_b = df2t[['–ë–∞–ª–ª—ã']]
    df2t_b['–ë–∞–ª–ª—ã'] = df2t_b['–ë–∞–ª–ª—ã'].str.replace(',', '.', regex=False)
    df2t_b = (df2t_b
        .rename(
            columns={'–ë–∞–ª–ª—ã': '–ì—Ä—É–ø–ø–∞ 2'}))

    # –û–±—ä–µ–¥–∏–Ω—è–µ–º —Ç–∞–±–ª–∏—Ü—ã –ø–æ –æ–±—â–µ–º—É –∏–Ω–¥–µ–∫—Å—É
    df0t_b = df1t_b.join(df2t_b)

    today = datetime.today().date()
    yesterday = datetime.today() - timedelta(days=1)
    yesterday_str = yesterday.strftime("%Y-%m-%d")

    # –ó–∞–¥–∞–µ–º –¥—Ä—É–≥—É—é –¥–∞—Ç—É –¥–ª—è —Å—Ä–∞–≤–Ω–µ–Ω–∏—è (–Ω–∞–ø—Ä–∏–º–µ—Ä, 2023-10-01)
    other_date = datetime(2025, 2, 28).date()
    if today <= other_date:
        df0t_b_s = df0t_b[:f'{yesterday_str}']
        # st.write("today <= other_date")
        # st.dataframe(df0t_b)
    else:
        df0t_b_s = df0t_b



    # –°–æ–∑–¥–∞–Ω–∏–µ —Ñ–∏–≥—É—Ä—ã
    fig = go.Figure()

    # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –ø–µ—Ä–≤–æ–≥–æ –≥—Ä–∞—Ñ–∏–∫–∞ (–ü—Ä–æ–¥–∞–∂–∏)
    fig.add_trace(go.Scatter(
        x=df0t_b_s.index.to_list(), y=df0t_b_s['–ì—Ä—É–ø–ø–∞ 1'],
        mode='lines', name='–ì—Ä—É–ø–ø–∞ 1',
        line=dict(color='blue')
    ))

    # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –≤—Ç–æ—Ä–æ–≥–æ –≥—Ä–∞—Ñ–∏–∫–∞ (–ü—Ä–∏–±—ã–ª—å)
    fig.add_trace(go.Scatter(
        x=df0t_b_s.index.to_list(), y=df0t_b_s['–ì—Ä—É–ø–ø–∞ 2'],
        mode='lines', name='–ì—Ä—É–ø–ø–∞ 2',
        line=dict(color='red')
    ))

    # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –º–∞–∫–µ—Ç–∞
    fig.update_layout(
        title='–¢–µ–º–ø —Ä–æ—Å—Ç–∞ –æ–±—â–µ–≥–æ –∫–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç–∞ –ø—Ä–æ–¥–∞–∂',
        xaxis_title='–î–∞—Ç–∞',
        yaxis_title='–ë–∞–ª–ª—ã',
        hovermode='x unified'
    )

    # –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –≥—Ä–∞—Ñ–∏–∫–∞ –≤ Streamlit
    st.plotly_chart(fig, use_container_width=True)



    sel_param = st.selectbox(
        "–í—ã–±–µ—Ä–∏—Ç–µ –ø–æ–∫–∞–∑–∞—Ç–µ–ª—å",
        ("–ü–î–°", "–°–û–ú", "–î–æ–ø–∫–∞", "–ü–∞–∫–µ—Ç",
        "–ê–≤—Ç–æ—Å—Ç—è–≥", "–ü–µ–Ω—Å–∏—è", "–ù–°", "–ê–ü–ñ–ö–£",
        "–°–∏–º-–∫–∞—Ä—Ç–∞", "–ö—Ä–æ—Å—Å –ö–ö"),
    )

    button_par = st.button("–í—ã–±—Ä–∞—Ç—å")

    if button_par:
        st.header(f'{sel_param}')
        # st.bar_chart(df_0[sel_param])

        fig = go.Figure()

        fig.add_trace(go.Bar(
            x=df_0.index.to_list(),
            y=df_0[f'{sel_param}'],
            marker_color='skyblue'  # –¶–≤–µ—Ç —Å—Ç–æ–ª–±—Ü–æ–≤
        ))

        # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –º–∞–∫–µ—Ç–∞
        fig.update_layout(
            title='–û–±—â–∏–π –ø–æ–∫–∞–∑–∞—Ç–µ–ª—å',
            xaxis_title='–ì—Ä—É–ø–ø—ã',
            yaxis_title=f'{sel_param}'
        )
        st.plotly_chart(fig, use_container_width=True)    

        # st.subheader('–õ–∏–¥–µ—Ä—ã –≥—Ä—É–ø–ø')
        df_10 = df1.copy()
        df_10 = df_10.query('index != "–ò—Ç–æ–≥"') 
        df_10 = (df_10
                .sort_values(sel_param,
                                ascending=False)
                .head(1)
                )
        df_10.index = df_10.index + ' (1–≥—Ä.)'
        # st.dataframe(df_10[[sel_param]].head(1))

        df_20 = df2.copy()
        df_20 = df_20.query('index != "–ò—Ç–æ–≥"') 
        df_20 = (df_20
                .sort_values(sel_param, 
                                ascending=False)
                .head(1)
                )
        df_20.index = df_20.index + ' (2–≥—Ä.)'
        # st.dataframe(df_20[[sel_param]].head(1))

        df_00 = pd.concat([df_10, df_20])

        fig = go.Figure()

        fig.add_trace(go.Bar(
            x=df_00.index.to_list(),
            y=df_00[f'{sel_param}'],
            marker_color='skyblue'  # –¶–≤–µ—Ç —Å—Ç–æ–ª–±—Ü–æ–≤
        ))

        # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –º–∞–∫–µ—Ç–∞
        fig.update_layout(
            title='–¢–æ–ø—ã –≤ –¥–∞–Ω–Ω–æ–º –ø–æ–∫–∞–∑–∞—Ç–µ–ª–µ',
            xaxis_title='–õ–∏–¥–µ—Ä—ã',
            yaxis_title=f'{sel_param}'
        )
        st.plotly_chart(fig, use_container_width=True)

        # st.bar_chart(df_00[sel_param])

        df1t_p = df1t[[f'{sel_param}']]
        df1t_p = (df1t_p
            .rename(
                columns={f'{sel_param}': '–ì—Ä—É–ø–ø–∞ 1'}))

        df2t_p = df2t[[f'{sel_param}']]
        df2t_p = (df2t_p
            .rename(
                columns={f'{sel_param}': '–ì—Ä—É–ø–ø–∞ 2'}))

        df0t_p = df1t_p.join(df2t_p)

        if today <= other_date:
            df0t_p_s = df0t_p[:f'{yesterday_str}']
        else:
            df0t_p_s = df0t_p

        # –°–æ–∑–¥–∞–Ω–∏–µ —Ñ–∏–≥—É—Ä—ã
        fig = go.Figure()

        # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –ø–µ—Ä–≤–æ–≥–æ –≥—Ä–∞—Ñ–∏–∫–∞ (–ü—Ä–æ–¥–∞–∂–∏)
        fig.add_trace(go.Scatter(
            x=df0t_p_s.index.to_list(), 
            y=df0t_p_s['–ì—Ä—É–ø–ø–∞ 1'],
            mode='lines', 
            name='–ì—Ä—É–ø–ø–∞ 1',
            line=dict(color='blue')
        ))

        # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –≤—Ç–æ—Ä–æ–≥–æ –≥—Ä–∞—Ñ–∏–∫–∞ (–ü—Ä–∏–±—ã–ª—å)
        fig.add_trace(go.Scatter(
            x=df0t_p_s.index.to_list(), 
            y=df0t_p_s['–ì—Ä—É–ø–ø–∞ 2'],
            mode='lines', 
            name='–ì—Ä—É–ø–ø–∞ 2',
            line=dict(color='red')
        ))

        # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –º–∞–∫–µ—Ç–∞
        fig.update_layout(
            title=f'–¢–µ–º–ø —Ä–æ—Å—Ç–∞ –ø–æ–∫–∞–∑–∞—Ç–µ–ª—è "{sel_param}" –ø–æ –¥–∞—Ç–µ',
            xaxis_title='–î–∞—Ç–∞',
            yaxis_title=f'{sel_param}',
            hovermode='x unified'
        )
        # fig.update_yaxes(dtick=1)

        # –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –≥—Ä–∞—Ñ–∏–∫–∞ –≤ Streamlit
        st.plotly_chart(fig, use_container_width=True)

if button_sign_in:
    true_pass = 0
    for ind in df_auth.index:
        log = df_auth['login'][ind]
        pas = df_auth['password'][ind]        
        if (login == log) & (password == pas):
            text_input_container_0.empty()            
            text_input_container_1.empty()
            text_input_container_2.empty()
            text_input_container_3.empty()
            user = df_auth['–§–∞–º–∏–ª–∏—è_–ò–º—è'][ind]
            st.session_state["user"] = user
            st.sidebar.info(f'–í—Ö–æ–¥ –≤—ã–ø–æ–ª–Ω–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º - {user}')
            st.session_state["sign in"] = True
            break;
    if st.session_state["sign in"] == False:
        if (login == None) | (password == None):
            st.sidebar.warning('–í–≤–µ–¥–∏—Ç–µ –≤—Å–µ –ø–æ–ª—è –¥–ª—è –≤—Ö–æ–¥–∞')
        else: 
            st.sidebar.error('–ù–µ–≤–µ—Ä–Ω—ã–π –ª–æ–≥–∏–Ω/–ø–∞—Ä–æ–ª—å')
        text_input_container_4.empty()
    else:       
        #st.write(f'{datetime.now}')
        #st.dataframe(df_auth)

        button_logout = text_input_container_4.button("–í—ã–π—Ç–∏")
        if button_logout:
            st.session_state["sign in"] = False

        names_groops = ['/','–ì—Ä—É–ø–ø–∞ 1', '–ì—Ä—É–ø–ø–∞ 2', '–ì—Ä—É–ø–ø–∞ 3']

        # –ü–µ—Ä–≤–∞—è –≥—Ä—É–ø–ø–∞
        # –£–∫–∞–∂–∏—Ç–µ URL —Ç–∞–±–ª–∏—Ü—ã (–¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω –¥–ª—è –≤—Å–µ—Ö)
        url1 = 'https://docs.google.com/spreadsheets/d/1MpYAg1WwQMHliB5bCZ8FNabZz25eEWBUsQKYRTYLZ0A/export?format=csv&gid=1672766275'
        # –ü—Ä–æ—á–∏—Ç–∞–π—Ç–µ –¥–∞–Ω–Ω—ã–µ –≤ DataFrame
        df1 = pd.read_csv(url1)
        df1.set_index("–§–ò–û", inplace=True)
        df_1 = df1.copy()
        # –£–¥–∞–ª–∏—Ç—å –≤—Å–µ —Å—Ç—Ä–æ–∫–∏, –∫—Ä–æ–º–µ —Å—Ç—Ä–æ–∫–∏ —Å –∏–Ω–¥–µ–∫—Å–æ–º 1
        df_1 = df_1.query('index == "–ò—Ç–æ–≥"') 
        # –ü–µ—Ä–µ–∏–º–µ–Ω—É–π—Ç–µ –∏–Ω–¥–µ–∫—Å
        new_index = pd.Index([names_groops[1]])  # –ù–æ–≤—ã–π –∏–Ω–¥–µ–∫—Å
        df_1 = df_1.set_axis(new_index, axis='index')

        # st.subheader('–í—Ç–æ—Ä–∞—è –≥—Ä—É–ø–ø–∞')
        # –£–∫–∞–∂–∏—Ç–µ URL —Ç–∞–±–ª–∏—Ü—ã (–¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω –¥–ª—è –≤—Å–µ—Ö)
        url2 = 'https://docs.google.com/spreadsheets/d/1BQOy0f7JDxAwjd-mvKCx-l42ZoASl0IkxCGJwNyfoiI/export?format=csv&gid=1672766275'
        df2 = pd.read_csv(url2)
        df2.set_index("–§–ò–û", inplace=True)
        df_2 = df2.copy()
        # –£–¥–∞–ª–∏—Ç—å –≤—Å–µ —Å—Ç—Ä–æ–∫–∏, –∫—Ä–æ–º–µ —Å—Ç—Ä–æ–∫–∏ —Å –∏–Ω–¥–µ–∫—Å–æ–º 1
        df_2 = df_2.query('index == "–ò—Ç–æ–≥"') 
        # –ü–µ—Ä–µ–∏–º–µ–Ω—É–π—Ç–µ –∏–Ω–¥–µ–∫—Å
        new_index = pd.Index([names_groops[2]])  # –ù–æ–≤—ã–π –∏–Ω–¥–µ–∫—Å
        df_2 = df_2.set_axis(new_index, axis='index')

        ##–û–±—ä–µ–¥–∏–Ω–µ–Ω–∏–µ —Ç–∞–±–ª–∏—Ü
        df_0 = pd.concat([df_1, df_2])

        # st.dataframe(df_0)

        df_0['–ë–∞–ª–ª—ã'] = df_0['–ë–∞–ª–ª—ã'].str.replace(',', '.', regex=False)
        df_0['–ë–∞–ª–ª—ã'] = pd.to_numeric(df_0['–ë–∞–ª–ª—ã'], errors='coerce')

        # st.subheader('–ë–∞–ª–ª—ã')
        #Data Set
        labels=df_0.index

        values = df_0['–ë–∞–ª–ª—ã']


        #The plot
        # fig = go.Figure(
        #     go.Pie(
        #     labels = labels,
        #     values = values,
        #     hoverinfo = "label+percent",
        #     textinfo = "value"
        # ))

        fig = px.pie(
            names=df_0.index.to_list(), 
            values=df_0['–ë–∞–ª–ª—ã'].to_list(), 
            title="–ë–∞–ª–ª—ã")


        #st.header("Pie chart")
        st.plotly_chart(fig)


        df_10 = df1.copy()
        df_10 = df_10.query('index != "–ò—Ç–æ–≥"')
        df_10['–ë–∞–ª–ª—ã'] = df_10['–ë–∞–ª–ª—ã'].str.replace(',', '.', regex=False) 
        df_10 = (df_10
                    .sort_values('–ë–∞–ª–ª—ã',
                                    ascending=False)
                    .head(1)
                )
        df_10.index = df_10.index + ' (1–≥—Ä.)'

        df_20 = df2.copy()
        df_20 = df_20.query('index != "–ò—Ç–æ–≥"')
        df_20['–ë–∞–ª–ª—ã'] = df_20['–ë–∞–ª–ª—ã'].str.replace(',', '.', regex=False) 
        df_20 = (df_20
                    .sort_values('–ë–∞–ª–ª—ã', 
                                ascending=False)
                    .head(1)
                )
        df_20.index = df_20.index + ' (2–≥—Ä.)'
        # st.dataframe(df_20[[sel_param]].head(1))

        df_00 = pd.concat([df_10, df_20])

        # –°–æ–∑–¥–∞–Ω–∏–µ —Å—Ç–æ–ª–±—á–∞—Ç–æ–π –¥–∏–∞–≥—Ä–∞–º–º—ã
        fig = go.Figure()

        fig.add_trace(go.Bar(
            x=df_00.index.to_list(),
            y=df_00['–ë–∞–ª–ª—ã'],
            marker_color='skyblue'  # –¶–≤–µ—Ç —Å—Ç–æ–ª–±—Ü–æ–≤
        ))

        # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –º–∞–∫–µ—Ç–∞
        fig.update_layout(
            title='–¢–æ–ø—ã',
            xaxis_title='–õ–∏–¥–µ—Ä—ã',
            yaxis_title='–ë–∞–ª–ª—ã'
        )
        st.plotly_chart(fig, use_container_width=True)

        # params = 
        url1t = 'https://docs.google.com/spreadsheets/d/1MpYAg1WwQMHliB5bCZ8FNabZz25eEWBUsQKYRTYLZ0A/export?format=csv&gid=628014439'
        df1t=pd.read_csv(url1t)
        df1t.set_index("–î–∞—Ç–∞", inplace=True)
        # st.dataframe(df1t)
        df1t_b = df1t[['–ë–∞–ª–ª—ã']]
        df1t_b['–ë–∞–ª–ª—ã'] = df1t_b['–ë–∞–ª–ª—ã'].str.replace(',', '.', regex=False)
        df1t_b = (df1t_b
            .rename(
                columns={'–ë–∞–ª–ª—ã': '–ì—Ä—É–ø–ø–∞ 1'}))


        url2t = 'https://docs.google.com/spreadsheets/d/1BQOy0f7JDxAwjd-mvKCx-l42ZoASl0IkxCGJwNyfoiI/export?format=csv&gid=628014439'
        df2t=pd.read_csv(url2t)
        # st.dataframe(df2t)
        df2t.set_index("–î–∞—Ç–∞", inplace=True)
        df2t_b = df2t[['–ë–∞–ª–ª—ã']]
        df2t_b['–ë–∞–ª–ª—ã'] = df2t_b['–ë–∞–ª–ª—ã'].str.replace(',', '.', regex=False)
        df2t_b = (df2t_b
            .rename(
                columns={'–ë–∞–ª–ª—ã': '–ì—Ä—É–ø–ø–∞ 2'}))

        # –û–±—ä–µ–¥–∏–Ω—è–µ–º —Ç–∞–±–ª–∏—Ü—ã –ø–æ –æ–±—â–µ–º—É –∏–Ω–¥–µ–∫—Å—É
        df0t_b = df1t_b.join(df2t_b)

        today = datetime.today().date()
        yesterday = datetime.today() - timedelta(days=1)

        yesterday_str = yesterday.strftime("%Y-%m-%d")
        # st.write(yesterday_str)

        # –ó–∞–¥–∞–µ–º –¥—Ä—É–≥—É—é –¥–∞—Ç—É –¥–ª—è —Å—Ä–∞–≤–Ω–µ–Ω–∏—è (–Ω–∞–ø—Ä–∏–º–µ—Ä, 2023-10-01)
        other_date = datetime(2025, 2, 28).date()
        # st.text('============')
        if today <= other_date:
            df0t_b_s = df0t_b[:f'{yesterday_str}']
            # st.write("today <= other_date")
            # st.dataframe(df0t_b)
        else:
            df0t_b_s = df0t_b



        # –°–æ–∑–¥–∞–Ω–∏–µ —Ñ–∏–≥—É—Ä—ã
        fig = go.Figure()

        # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –ø–µ—Ä–≤–æ–≥–æ –≥—Ä–∞—Ñ–∏–∫–∞ (–ü—Ä–æ–¥–∞–∂–∏)
        fig.add_trace(go.Scatter(
            x=df0t_b_s.index.to_list(), y=df0t_b_s['–ì—Ä—É–ø–ø–∞ 1'],
            mode='lines', name='–ì—Ä—É–ø–ø–∞ 1',
            line=dict(color='blue')
        ))

        # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –≤—Ç–æ—Ä–æ–≥–æ –≥—Ä–∞—Ñ–∏–∫–∞ (–ü—Ä–∏–±—ã–ª—å)
        fig.add_trace(go.Scatter(
            x=df0t_b_s.index.to_list(), y=df0t_b_s['–ì—Ä—É–ø–ø–∞ 2'],
            mode='lines', name='–ì—Ä—É–ø–ø–∞ 2',
            line=dict(color='red')
        ))

        # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –º–∞–∫–µ—Ç–∞
        fig.update_layout(
            title='–¢–µ–º–ø —Ä–æ—Å—Ç–∞ –æ–±—â–µ–≥–æ –∫–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç–∞ –ø—Ä–æ–¥–∞–∂',
            xaxis_title='–î–∞—Ç–∞',
            yaxis_title='–ë–∞–ª–ª—ã',
            hovermode='x unified'
        )

        # –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –≥—Ä–∞—Ñ–∏–∫–∞ –≤ Streamlit
        st.plotly_chart(fig, use_container_width=True)



        sel_param = st.selectbox(
            "–í—ã–±–µ—Ä–∏—Ç–µ –ø–æ–∫–∞–∑–∞—Ç–µ–ª—å",
            ("–ü–î–°", "–°–û–ú", "–î–æ–ø–∫–∞", "–ü–∞–∫–µ—Ç",
            "–ê–≤—Ç–æ—Å—Ç—è–≥", "–ü–µ–Ω—Å–∏—è", "–ù–°", "–ê–ü–ñ–ö–£",
            "–°–∏–º-–∫–∞—Ä—Ç–∞", "–ö—Ä–æ—Å—Å –ö–ö"),
        )

        button_par = st.button("–í—ã–±—Ä–∞—Ç—å")

        if button_par:
            st.header(f'{sel_param}')
            # st.bar_chart(df_0[sel_param])

            fig = go.Figure()

            fig.add_trace(go.Bar(
                x=df_0.index.to_list(),
                y=df_0[f'{sel_param}'],
                marker_color='skyblue'  # –¶–≤–µ—Ç —Å—Ç–æ–ª–±—Ü–æ–≤
            ))

            # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –º–∞–∫–µ—Ç–∞
            fig.update_layout(
                title='–û–±—â–∏–π –ø–æ–∫–∞–∑–∞—Ç–µ–ª—å',
                xaxis_title='–ì—Ä—É–ø–ø—ã',
                yaxis_title=f'{sel_param}'
            )
            st.plotly_chart(fig, use_container_width=True)    

            # st.subheader('–õ–∏–¥–µ—Ä—ã –≥—Ä—É–ø–ø')
            df_10 = df1.copy()
            df_10 = df_10.query('index != "–ò—Ç–æ–≥"') 
            df_10 = (df_10
                    .sort_values(sel_param,
                                    ascending=False)
                    .head(1)
                    )
            df_10.index = df_10.index + ' (1–≥—Ä.)'
            # st.dataframe(df_10[[sel_param]].head(1))

            df_20 = df2.copy()
            df_20 = df_20.query('index != "–ò—Ç–æ–≥"') 
            df_20 = (df_20
                    .sort_values(sel_param, 
                                    ascending=False)
                    .head(1)
                    )
            df_20.index = df_20.index + ' (2–≥—Ä.)'
            # st.dataframe(df_20[[sel_param]].head(1))

            df_00 = pd.concat([df_10, df_20])

            fig = go.Figure()

            fig.add_trace(go.Bar(
                x=df_00.index.to_list(),
                y=df_00[f'{sel_param}'],
                marker_color='skyblue'  # –¶–≤–µ—Ç —Å—Ç–æ–ª–±—Ü–æ–≤
            ))

            # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –º–∞–∫–µ—Ç–∞
            fig.update_layout(
                title='–¢–æ–ø—ã –≤ –¥–∞–Ω–Ω–æ–º –ø–æ–∫–∞–∑–∞—Ç–µ–ª–µ',
                xaxis_title='–õ–∏–¥–µ—Ä—ã',
                yaxis_title=f'{sel_param}'
            )
            st.plotly_chart(fig, use_container_width=True)

            # st.bar_chart(df_00[sel_param])

            df1t_p = df1t[[f'{sel_param}']]
            df1t_p = (df1t_p
                .rename(
                    columns={f'{sel_param}': '–ì—Ä—É–ø–ø–∞ 1'}))

            df2t_p = df2t[[f'{sel_param}']]
            df2t_p = (df2t_p
                .rename(
                    columns={f'{sel_param}': '–ì—Ä—É–ø–ø–∞ 2'}))

            df0t_p = df1t_p.join(df2t_p)

            if today <= other_date:
                df0t_p_s = df0t_p[:f'{yesterday_str}']
            else:
                df0t_p_s = df0t_p

            # –°–æ–∑–¥–∞–Ω–∏–µ —Ñ–∏–≥—É—Ä—ã
            fig = go.Figure()

            # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –ø–µ—Ä–≤–æ–≥–æ –≥—Ä–∞—Ñ–∏–∫–∞ (–ü—Ä–æ–¥–∞–∂–∏)
            fig.add_trace(go.Scatter(
                x=df0t_p_s.index.to_list(), 
                y=df0t_p_s['–ì—Ä—É–ø–ø–∞ 1'],
                mode='lines', 
                name='–ì—Ä—É–ø–ø–∞ 1',
                line=dict(color='blue')
            ))

            # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –≤—Ç–æ—Ä–æ–≥–æ –≥—Ä–∞—Ñ–∏–∫–∞ (–ü—Ä–∏–±—ã–ª—å)
            fig.add_trace(go.Scatter(
                x=df0t_p_s.index.to_list(), 
                y=df0t_p_s['–ì—Ä—É–ø–ø–∞ 2'],
                mode='lines', 
                name='–ì—Ä—É–ø–ø–∞ 2',
                line=dict(color='red')
            ))

            # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –º–∞–∫–µ—Ç–∞
            fig.update_layout(
                title=f'–¢–µ–º–ø —Ä–æ—Å—Ç–∞ –ø–æ–∫–∞–∑–∞—Ç–µ–ª—è "{sel_param}" –ø–æ –¥–∞—Ç–µ',
                xaxis_title='–î–∞—Ç–∞',
                yaxis_title=f'{sel_param}',
                hovermode='x unified'
            )

            # –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –≥—Ä–∞—Ñ–∏–∫–∞ –≤ Streamlit
            st.plotly_chart(fig, use_container_width=True)


